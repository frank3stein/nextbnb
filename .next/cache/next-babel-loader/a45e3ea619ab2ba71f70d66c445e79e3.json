{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from \"date-fns/format\";\nimport dateFnsParse from \"date-fns/parse\";\nimport { DateUtils } from \"react-day-picker\";\nimport { useState } from \"react\";\nimport calculateNights from \"../utils/calculate-nights\";\n\nvar parseDate = function parseDate(str, format, locale) {\n  var parsed = dateFnsParse(str, format, new Date(), {\n    locale: locale\n  });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nvar formatDate = function formatDate(date, format, locale) {\n  return dateFnsFormat(date, format, {\n    locale: locale\n  });\n};\n\nvar format = \"dd MMM yyyy\"; // const numberOfNightsBetweenDates = (startDate, endDate) => {\n//   const start = new Date(startDate); //clone\n//   const end = new Date(endDate); //clone\n//   let dayCount = 0;\n//   while (end > start) {\n//     dayCount++;\n//     start.setDate(start.getDate() + 1);\n//   }\n//   return dayCount;\n// };\n\nexport default (function (_ref) {\n  var datesChanged = _ref.datesChanged,\n      bookedDates = _ref.bookedDates;\n  var today = new Date();\n  var tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  var _useState = useState(today),\n      startDate = _useState[0],\n      setStartDate = _useState[1];\n\n  var _useState2 = useState(tomorrow),\n      endDate = _useState2[0],\n      setEndDate = _useState2[1];\n\n  bookedDates = bookedDates.map(function (date) {\n    return new Date(date);\n  });\n  return __jsx(\"div\", {\n    className: \"jsx-2233285091\" + \" \" + \"date-range-picker-container\"\n  }, __jsx(\"div\", {\n    className: \"jsx-2233285091\"\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    className: \"jsx-2233285091\"\n  }, \"From:\"), __jsx(DayPickerInput, {\n    formatDate: formatDate,\n    format: format,\n    value: startDate,\n    parseDate: parseDate,\n    placeholder: \"\".concat(dateFnsFormat(startDate, format)),\n    dayPickerProps: {\n      modifiers: {\n        disabled: [].concat(_toConsumableArray(bookedDates), [{\n          before: new Date()\n        }])\n      }\n    },\n    onDayChange: function onDayChange(day) {\n      setStartDate(day);\n      var newEndDate = new Date(day);\n\n      if (calculateNights(day, endDate) < 1) {\n        newEndDate.setDate(newEndDate.getDate() + 1);\n        setEndDate(newEndDate);\n      }\n\n      datesChanged(day, newEndDate);\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-2233285091\"\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    className: \"jsx-2233285091\"\n  }, \"To:\"), __jsx(DayPickerInput, {\n    formatDate: formatDate,\n    format: format,\n    parseDate: parseDate,\n    value: endDate,\n    placeholder: \"\".concat(dateFnsFormat(endDate, format)),\n    dayPickerProps: {\n      modifiers: {\n        disabled: [].concat(_toConsumableArray(bookedDates), [{\n          before: startDate\n        }])\n      }\n    },\n    onDayChange: function onDayChange(day) {\n      setEndDate(day);\n      datesChanged(startDate, day);\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"1123662568\"\n  }, \".date-range-picker-container.jsx-2233285091 div.jsx-2233285091{display:grid;border:1px solid #ddd;grid-template-columns:30% 70%;padding:10px;}label.jsx-2233285091{padding-top:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VtaWwvZGV2ZWxvcG1lbnQvbmV4dGJuYi9jb21wb25lbnRzL0RhdGVSYW5nZVBpY2tlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErRmtCLEFBR3dCLEFBTUksYUFMSyxJQU14QixrQkFMZ0MsOEJBQ2pCLGFBQ2YiLCJmaWxlIjoiL2hvbWUvZW1pbC9kZXZlbG9wbWVudC9uZXh0Ym5iL2NvbXBvbmVudHMvRGF0ZVJhbmdlUGlja2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERheVBpY2tlcklucHV0IGZyb20gXCJyZWFjdC1kYXktcGlja2VyL0RheVBpY2tlcklucHV0XCI7XG5pbXBvcnQgXCJyZWFjdC1kYXktcGlja2VyL2xpYi9zdHlsZS5jc3NcIjtcbmltcG9ydCBkYXRlRm5zRm9ybWF0IGZyb20gXCJkYXRlLWZucy9mb3JtYXRcIjtcbmltcG9ydCBkYXRlRm5zUGFyc2UgZnJvbSBcImRhdGUtZm5zL3BhcnNlXCI7XG5pbXBvcnQgeyBEYXRlVXRpbHMgfSBmcm9tIFwicmVhY3QtZGF5LXBpY2tlclwiO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBjYWxjdWxhdGVOaWdodHMgZnJvbSBcIi4uL3V0aWxzL2NhbGN1bGF0ZS1uaWdodHNcIjtcblxuY29uc3QgcGFyc2VEYXRlID0gKHN0ciwgZm9ybWF0LCBsb2NhbGUpID0+IHtcbiAgY29uc3QgcGFyc2VkID0gZGF0ZUZuc1BhcnNlKHN0ciwgZm9ybWF0LCBuZXcgRGF0ZSgpLCB7IGxvY2FsZSB9KTtcbiAgcmV0dXJuIERhdGVVdGlscy5pc0RhdGUocGFyc2VkKSA/IHBhcnNlZCA6IG51bGw7XG59O1xuXG5jb25zdCBmb3JtYXREYXRlID0gKGRhdGUsIGZvcm1hdCwgbG9jYWxlKSA9PlxuICBkYXRlRm5zRm9ybWF0KGRhdGUsIGZvcm1hdCwgeyBsb2NhbGUgfSk7XG5cbmNvbnN0IGZvcm1hdCA9IFwiZGQgTU1NIHl5eXlcIjtcblxuLy8gY29uc3QgbnVtYmVyT2ZOaWdodHNCZXR3ZWVuRGF0ZXMgPSAoc3RhcnREYXRlLCBlbmREYXRlKSA9PiB7XG4vLyAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoc3RhcnREYXRlKTsgLy9jbG9uZVxuLy8gICBjb25zdCBlbmQgPSBuZXcgRGF0ZShlbmREYXRlKTsgLy9jbG9uZVxuLy8gICBsZXQgZGF5Q291bnQgPSAwO1xuXG4vLyAgIHdoaWxlIChlbmQgPiBzdGFydCkge1xuLy8gICAgIGRheUNvdW50Kys7XG4vLyAgICAgc3RhcnQuc2V0RGF0ZShzdGFydC5nZXREYXRlKCkgKyAxKTtcbi8vICAgfVxuXG4vLyAgIHJldHVybiBkYXlDb3VudDtcbi8vIH07XG5cbmV4cG9ydCBkZWZhdWx0ICh7IGRhdGVzQ2hhbmdlZCwgYm9va2VkRGF0ZXMgfSkgPT4ge1xuICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG4gIGNvbnN0IHRvbW9ycm93ID0gbmV3IERhdGUodG9kYXkpO1xuICB0b21vcnJvdy5zZXREYXRlKHRvbW9ycm93LmdldERhdGUoKSArIDEpO1xuICBjb25zdCBbc3RhcnREYXRlLCBzZXRTdGFydERhdGVdID0gdXNlU3RhdGUodG9kYXkpO1xuICBjb25zdCBbZW5kRGF0ZSwgc2V0RW5kRGF0ZV0gPSB1c2VTdGF0ZSh0b21vcnJvdyk7XG4gIGJvb2tlZERhdGVzID0gYm9va2VkRGF0ZXMubWFwKGRhdGUgPT4ge1xuICAgIHJldHVybiBuZXcgRGF0ZShkYXRlKTtcbiAgfSk7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJkYXRlLXJhbmdlLXBpY2tlci1jb250YWluZXJcIj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPVwiXCI+RnJvbTo8L2xhYmVsPlxuICAgICAgICA8RGF5UGlja2VySW5wdXRcbiAgICAgICAgICBmb3JtYXREYXRlPXtmb3JtYXREYXRlfVxuICAgICAgICAgIGZvcm1hdD17Zm9ybWF0fVxuICAgICAgICAgIHZhbHVlPXtzdGFydERhdGV9XG4gICAgICAgICAgcGFyc2VEYXRlPXtwYXJzZURhdGV9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e2Ake2RhdGVGbnNGb3JtYXQoc3RhcnREYXRlLCBmb3JtYXQpfWB9XG4gICAgICAgICAgZGF5UGlja2VyUHJvcHM9e3tcbiAgICAgICAgICAgIG1vZGlmaWVyczoge1xuICAgICAgICAgICAgICBkaXNhYmxlZDogW1xuICAgICAgICAgICAgICAgIC4uLmJvb2tlZERhdGVzLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGJlZm9yZTogbmV3IERhdGUoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgICAgb25EYXlDaGFuZ2U9e2RheSA9PiB7XG4gICAgICAgICAgICBzZXRTdGFydERhdGUoZGF5KTtcbiAgICAgICAgICAgIGNvbnN0IG5ld0VuZERhdGUgPSBuZXcgRGF0ZShkYXkpO1xuICAgICAgICAgICAgaWYgKGNhbGN1bGF0ZU5pZ2h0cyhkYXksIGVuZERhdGUpIDwgMSkge1xuICAgICAgICAgICAgICBuZXdFbmREYXRlLnNldERhdGUobmV3RW5kRGF0ZS5nZXREYXRlKCkgKyAxKTtcbiAgICAgICAgICAgICAgc2V0RW5kRGF0ZShuZXdFbmREYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRhdGVzQ2hhbmdlZChkYXksIG5ld0VuZERhdGUpO1xuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbCBodG1sRm9yPVwiXCI+VG86PC9sYWJlbD5cbiAgICAgICAgPERheVBpY2tlcklucHV0XG4gICAgICAgICAgZm9ybWF0RGF0ZT17Zm9ybWF0RGF0ZX1cbiAgICAgICAgICBmb3JtYXQ9e2Zvcm1hdH1cbiAgICAgICAgICBwYXJzZURhdGU9e3BhcnNlRGF0ZX1cbiAgICAgICAgICB2YWx1ZT17ZW5kRGF0ZX1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17YCR7ZGF0ZUZuc0Zvcm1hdChlbmREYXRlLCBmb3JtYXQpfWB9XG4gICAgICAgICAgZGF5UGlja2VyUHJvcHM9e3tcbiAgICAgICAgICAgIG1vZGlmaWVyczoge1xuICAgICAgICAgICAgICBkaXNhYmxlZDogW1xuICAgICAgICAgICAgICAgIC4uLmJvb2tlZERhdGVzLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGJlZm9yZTogc3RhcnREYXRlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkRheUNoYW5nZT17ZGF5ID0+IHtcbiAgICAgICAgICAgIHNldEVuZERhdGUoZGF5KTtcbiAgICAgICAgICAgIGRhdGVzQ2hhbmdlZChzdGFydERhdGUsIGRheSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuZGF0ZS1yYW5nZS1waWNrZXItY29udGFpbmVyIGRpdiB7XG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMzAlIDcwJTtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICB9XG4gICAgICAgIGxhYmVsIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgLkRheVBpY2tlcklucHV0IGlucHV0IHtcbiAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iXX0= */\\n/*@ sourceURL=/home/emil/development/nextbnb/components/DateRangePicker.js */\"), __jsx(_JSXStyle, {\n    id: \"2975770914\"\n  }, \".DayPickerInput input{width:120px;padding:10px;font-size:16px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2VtaWwvZGV2ZWxvcG1lbnQvbmV4dGJuYi9jb21wb25lbnRzL0RhdGVSYW5nZVBpY2tlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwR3lCLEFBR3VCLFlBQ0MsYUFDRSxlQUNqQiIsImZpbGUiOiIvaG9tZS9lbWlsL2RldmVsb3BtZW50L25leHRibmIvY29tcG9uZW50cy9EYXRlUmFuZ2VQaWNrZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF5UGlja2VySW5wdXQgZnJvbSBcInJlYWN0LWRheS1waWNrZXIvRGF5UGlja2VySW5wdXRcIjtcbmltcG9ydCBcInJlYWN0LWRheS1waWNrZXIvbGliL3N0eWxlLmNzc1wiO1xuaW1wb3J0IGRhdGVGbnNGb3JtYXQgZnJvbSBcImRhdGUtZm5zL2Zvcm1hdFwiO1xuaW1wb3J0IGRhdGVGbnNQYXJzZSBmcm9tIFwiZGF0ZS1mbnMvcGFyc2VcIjtcbmltcG9ydCB7IERhdGVVdGlscyB9IGZyb20gXCJyZWFjdC1kYXktcGlja2VyXCI7XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGNhbGN1bGF0ZU5pZ2h0cyBmcm9tIFwiLi4vdXRpbHMvY2FsY3VsYXRlLW5pZ2h0c1wiO1xuXG5jb25zdCBwYXJzZURhdGUgPSAoc3RyLCBmb3JtYXQsIGxvY2FsZSkgPT4ge1xuICBjb25zdCBwYXJzZWQgPSBkYXRlRm5zUGFyc2Uoc3RyLCBmb3JtYXQsIG5ldyBEYXRlKCksIHsgbG9jYWxlIH0pO1xuICByZXR1cm4gRGF0ZVV0aWxzLmlzRGF0ZShwYXJzZWQpID8gcGFyc2VkIDogbnVsbDtcbn07XG5cbmNvbnN0IGZvcm1hdERhdGUgPSAoZGF0ZSwgZm9ybWF0LCBsb2NhbGUpID0+XG4gIGRhdGVGbnNGb3JtYXQoZGF0ZSwgZm9ybWF0LCB7IGxvY2FsZSB9KTtcblxuY29uc3QgZm9ybWF0ID0gXCJkZCBNTU0geXl5eVwiO1xuXG4vLyBjb25zdCBudW1iZXJPZk5pZ2h0c0JldHdlZW5EYXRlcyA9IChzdGFydERhdGUsIGVuZERhdGUpID0+IHtcbi8vICAgY29uc3Qgc3RhcnQgPSBuZXcgRGF0ZShzdGFydERhdGUpOyAvL2Nsb25lXG4vLyAgIGNvbnN0IGVuZCA9IG5ldyBEYXRlKGVuZERhdGUpOyAvL2Nsb25lXG4vLyAgIGxldCBkYXlDb3VudCA9IDA7XG5cbi8vICAgd2hpbGUgKGVuZCA+IHN0YXJ0KSB7XG4vLyAgICAgZGF5Q291bnQrKztcbi8vICAgICBzdGFydC5zZXREYXRlKHN0YXJ0LmdldERhdGUoKSArIDEpO1xuLy8gICB9XG5cbi8vICAgcmV0dXJuIGRheUNvdW50O1xuLy8gfTtcblxuZXhwb3J0IGRlZmF1bHQgKHsgZGF0ZXNDaGFuZ2VkLCBib29rZWREYXRlcyB9KSA9PiB7XG4gIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcbiAgY29uc3QgdG9tb3Jyb3cgPSBuZXcgRGF0ZSh0b2RheSk7XG4gIHRvbW9ycm93LnNldERhdGUodG9tb3Jyb3cuZ2V0RGF0ZSgpICsgMSk7XG4gIGNvbnN0IFtzdGFydERhdGUsIHNldFN0YXJ0RGF0ZV0gPSB1c2VTdGF0ZSh0b2RheSk7XG4gIGNvbnN0IFtlbmREYXRlLCBzZXRFbmREYXRlXSA9IHVzZVN0YXRlKHRvbW9ycm93KTtcbiAgYm9va2VkRGF0ZXMgPSBib29rZWREYXRlcy5tYXAoZGF0ZSA9PiB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUpO1xuICB9KTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImRhdGUtcmFuZ2UtcGlja2VyLWNvbnRhaW5lclwiPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJcIj5Gcm9tOjwvbGFiZWw+XG4gICAgICAgIDxEYXlQaWNrZXJJbnB1dFxuICAgICAgICAgIGZvcm1hdERhdGU9e2Zvcm1hdERhdGV9XG4gICAgICAgICAgZm9ybWF0PXtmb3JtYXR9XG4gICAgICAgICAgdmFsdWU9e3N0YXJ0RGF0ZX1cbiAgICAgICAgICBwYXJzZURhdGU9e3BhcnNlRGF0ZX1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17YCR7ZGF0ZUZuc0Zvcm1hdChzdGFydERhdGUsIGZvcm1hdCl9YH1cbiAgICAgICAgICBkYXlQaWNrZXJQcm9wcz17e1xuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgIGRpc2FibGVkOiBbXG4gICAgICAgICAgICAgICAgLi4uYm9va2VkRGF0ZXMsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgYmVmb3JlOiBuZXcgRGF0ZSgpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkRheUNoYW5nZT17ZGF5ID0+IHtcbiAgICAgICAgICAgIHNldFN0YXJ0RGF0ZShkYXkpO1xuICAgICAgICAgICAgY29uc3QgbmV3RW5kRGF0ZSA9IG5ldyBEYXRlKGRheSk7XG4gICAgICAgICAgICBpZiAoY2FsY3VsYXRlTmlnaHRzKGRheSwgZW5kRGF0ZSkgPCAxKSB7XG4gICAgICAgICAgICAgIG5ld0VuZERhdGUuc2V0RGF0ZShuZXdFbmREYXRlLmdldERhdGUoKSArIDEpO1xuICAgICAgICAgICAgICBzZXRFbmREYXRlKG5ld0VuZERhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGF0ZXNDaGFuZ2VkKGRheSwgbmV3RW5kRGF0ZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJcIj5Ubzo8L2xhYmVsPlxuICAgICAgICA8RGF5UGlja2VySW5wdXRcbiAgICAgICAgICBmb3JtYXREYXRlPXtmb3JtYXREYXRlfVxuICAgICAgICAgIGZvcm1hdD17Zm9ybWF0fVxuICAgICAgICAgIHBhcnNlRGF0ZT17cGFyc2VEYXRlfVxuICAgICAgICAgIHZhbHVlPXtlbmREYXRlfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtgJHtkYXRlRm5zRm9ybWF0KGVuZERhdGUsIGZvcm1hdCl9YH1cbiAgICAgICAgICBkYXlQaWNrZXJQcm9wcz17e1xuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgIGRpc2FibGVkOiBbXG4gICAgICAgICAgICAgICAgLi4uYm9va2VkRGF0ZXMsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgYmVmb3JlOiBzdGFydERhdGVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uRGF5Q2hhbmdlPXtkYXkgPT4ge1xuICAgICAgICAgICAgc2V0RW5kRGF0ZShkYXkpO1xuICAgICAgICAgICAgZGF0ZXNDaGFuZ2VkKHN0YXJ0RGF0ZSwgZGF5KTtcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5kYXRlLXJhbmdlLXBpY2tlci1jb250YWluZXIgZGl2IHtcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAzMCUgNzAlO1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgIH1cbiAgICAgICAgbGFiZWwge1xuICAgICAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAuRGF5UGlja2VySW5wdXQgaW5wdXQge1xuICAgICAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdfQ== */\\n/*@ sourceURL=/home/emil/development/nextbnb/components/DateRangePicker.js */\"));\n});","map":{"version":3,"sources":["/home/emil/development/nextbnb/components/DateRangePicker.js"],"names":["DayPickerInput","dateFnsFormat","dateFnsParse","DateUtils","useState","calculateNights","parseDate","str","format","locale","parsed","Date","isDate","formatDate","date","datesChanged","bookedDates","today","tomorrow","setDate","getDate","startDate","setStartDate","endDate","setEndDate","map","modifiers","disabled","before","day","newEndDate"],"mappings":"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","sourcesContent":["import DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from \"date-fns/format\";\nimport dateFnsParse from \"date-fns/parse\";\nimport { DateUtils } from \"react-day-picker\";\nimport { useState } from \"react\";\nimport calculateNights from \"../utils/calculate-nights\";\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nconst formatDate = (date, format, locale) =>\n  dateFnsFormat(date, format, { locale });\n\nconst format = \"dd MMM yyyy\";\n\n// const numberOfNightsBetweenDates = (startDate, endDate) => {\n//   const start = new Date(startDate); //clone\n//   const end = new Date(endDate); //clone\n//   let dayCount = 0;\n\n//   while (end > start) {\n//     dayCount++;\n//     start.setDate(start.getDate() + 1);\n//   }\n\n//   return dayCount;\n// };\n\nexport default ({ datesChanged, bookedDates }) => {\n  const today = new Date();\n  const tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const [startDate, setStartDate] = useState(today);\n  const [endDate, setEndDate] = useState(tomorrow);\n  bookedDates = bookedDates.map(date => {\n    return new Date(date);\n  });\n  return (\n    <div className=\"date-range-picker-container\">\n      <div>\n        <label htmlFor=\"\">From:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          value={startDate}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(startDate, format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: [\n                ...bookedDates,\n                {\n                  before: new Date()\n                }\n              ]\n            }\n          }}\n          onDayChange={day => {\n            setStartDate(day);\n            const newEndDate = new Date(day);\n            if (calculateNights(day, endDate) < 1) {\n              newEndDate.setDate(newEndDate.getDate() + 1);\n              setEndDate(newEndDate);\n            }\n            datesChanged(day, newEndDate);\n          }}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"\">To:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          value={endDate}\n          placeholder={`${dateFnsFormat(endDate, format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: [\n                ...bookedDates,\n                {\n                  before: startDate\n                }\n              ]\n            }\n          }}\n          onDayChange={day => {\n            setEndDate(day);\n            datesChanged(startDate, day);\n          }}\n        />\n      </div>\n      <style jsx>{`\n        .date-range-picker-container div {\n          display: grid;\n          border: 1px solid #ddd;\n          grid-template-columns: 30% 70%;\n          padding: 10px;\n        }\n        label {\n          padding-top: 10px;\n        }\n      `}</style>\n      <style jsx global>{`\n        .DayPickerInput input {\n          width: 120px;\n          padding: 10px;\n          font-size: 16px;\n        }\n      `}</style>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}